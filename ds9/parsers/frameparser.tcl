package provide DS9 1.0

######
# Begin autogenerated taccle (version 1.3) routines.
# Although taccle itself is protected by the GNU Public License (GPL)
# all user-supplied functions are protected by their respective
# author's license.  See http://mini.net/tcl/taccle for other details.
######

namespace eval frame {
    variable yylval {}
    variable table
    variable rules
    variable token {}
    variable yycnt 0
    variable yyerr 0
    variable save_state 0

    namespace export yylex
}

proc frame::YYABORT {} {
    return -code return 1
}

proc frame::YYACCEPT {} {
    return -code return 0
}

proc frame::YYERROR {} {
    variable yyerr
    set yyerr 1
}

proc frame::yyclearin {} {
    variable token
    variable yycnt
    set token {}
    incr yycnt -1
}

proc frame::yyerror {s} {
    puts stderr $s
}

proc frame::setupvalues {stack pointer numsyms} {
    upvar 1 1 y
    set y {}
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        set y [lindex $stack $pointer]
        incr pointer
    }
}

proc frame::unsetupvalues {numsyms} {
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        unset y
    }
}

array set frame::table {
  21:289 reduce
  10:280,target 56
  10:279,target 55
  9:283 shift
  12:310 shift
  9:284 shift
  3:288,target 23
  9:285 shift
  60:289 reduce
  59:289 reduce
  30:289,target 71
  29:289,target 51
  27:0 reduce
  9:286 shift
  75:289,target 45
  9:287 shift
  10:258,target 34
  48:0 reduce
  0:296,target 5
  30:289 reduce
  29:289 reduce
  9:271,target 47
  70:0 reduce
  69:0 reduce
  64:289,target 82
  12:320 goto
  68:289 reduce
  87:0,target 44
  2:0 reduce
  9:306 shift
  80:0,target 69
  79:0,target 68
  4:291,target 27
  72:0,target 76
  10:277,target 53
  64:0,target 82
  56:0,target 24
  53:289,target 21
  38:289 reduce
  24:0 reduce
  48:0,target 16
  9:312 goto
  41:0,target 9
  9:313 goto
  10:327,target 70
  77:289 reduce
  45:0 reduce
  33:0,target 1
  25:0,target 38
  0:304,target 12
  0:294,target 3
  17:0,target 73
  66:0 reduce
  42:289,target 10
  4:319,target 28
  9:268,target 44
  87:289,target 44
  47:289 reduce
  87:0 reduce
  86:289 reduce
  4:288,target 26
  31:289,target 72
  17:288 shift
  10:275,target 51
  76:289,target 63
  21:0 reduce
  17:289 reduce
  17:291 shift
  9:326 goto
  9:287,target 63
  56:289 reduce
  42:0 reduce
  20:289,target 53
  19:289,target 33
  0:302,target 10
  6:288 shift
  65:289,target 80
  63:0 reduce
  9:266,target 42
  26:289 reduce
  84:0 reduce
  65:289 reduce
  54:289,target 22
  17:0 reduce
  10:273,target 49
  38:0 reduce
  35:289 reduce
  9:285,target 61
  43:289,target 11
  88:289,target 89
  74:289 reduce
  60:0 reduce
  59:0 reduce
  11:296,target 72
  0:300,target 8
  3:0,target 55
  84:0,target 41
  76:0,target 63
  15:322,target 81
  9:264,target 40
  81:0 reduce
  68:0,target 83
  17:324 goto
  61:0,target 29
  53:0,target 21
  44:289 reduce
  32:289,target 43
  77:289,target 62
  45:0,target 13
  37:0,target 5
  15:291,target 80
  14:0 reduce
  83:289 reduce
  30:0,target 71
  29:0,target 51
  10:271,target 47
  22:0,target 37
  11:325,target 75
  35:0 reduce
  14:289 reduce
  14:0,target 48
  21:289,target 54
  9:283,target 59
  66:289,target 81
  56:0 reduce
  53:289 reduce
  3:288 shift
  77:0 reduce
  3:289 reduce
  9:262,target 38
  3:291 shift
  55:289,target 23
  23:289 reduce
  9:312,target 65
  62:289 reduce
  15:288,target 79
  10:268,target 44
  32:0 reduce
  0:316,target 19
  44:289,target 12
  1:289,target 50
  9:281,target 57
  53:0 reduce
  32:289 reduce
  11:292,target 71
  74:0 reduce
  71:289 reduce
  6:288,target 29
  33:289,target 1
  9:259,target 35
  9:260,target 36
  78:289,target 40
  10:287,target 63
  16:291,target 83
  3:318 goto
  41:289 reduce
  28:0 reduce
  22:289,target 37
  7:0,target 70
  10:266,target 42
  80:289 reduce
  79:289 reduce
  67:289,target 36
  0:314,target 18
  81:0,target 42
  17:324,target 87
  73:0,target 79
  50:0 reduce
  49:0 reduce
  11:300 shift
  9:278,target 54
  65:0,target 80
  7:291,target 31
  57:0,target 25
  11:292 shift
  71:0 reduce
  50:289 reduce
  50:0,target 18
  49:289 reduce
  49:0,target 17
  11:300,target 74
  56:289,target 24
  42:0,target 10
  34:0,target 2
  0:288 shift
  9:257,target 33
  88:289 shift
  26:0,target 59
  11:296 shift
  10:285,target 61
  0:300 shift
  3:0 reduce
  18:0,target 0
  16:288,target 82
  11:297 shift
  0:301 shift
  20:289 reduce
  19:289 reduce
  0:302 shift
  0:303 shift
  0:293 shift
  45:289,target 13
  25:0 reduce
  0:304 shift
  0:294 shift
  58:289 reduce
  0:305 shift
  0:295 shift
  2:289,target 52
  10:264,target 40
  0:296 shift
  46:0 reduce
  0:307 shift
  0:298 shift
  0:308 shift
  8:289 reduce
  9:276,target 52
  0:299 shift
  0:309 shift
  7:288,target 30
  67:0 reduce
  34:289,target 2
  28:289 reduce
  0:311 shift
  80:289,target 69
  79:289,target 68
  17:291,target 86
  9:326,target 67
  67:289 reduce
  0:314 goto
  10:283,target 59
  0:316 goto
  23:289,target 56
  19:315 goto
  68:289,target 83
  22:0 reduce
  11:325 goto
  37:289 reduce
  10:262,target 38
  43:0 reduce
  0:299,target 7
  0:309,target 16
  76:289 reduce
  12:290,target 76
  12:289,target 61
  9:274,target 50
  64:0 reduce
  57:289,target 25
  10:312,target 68
  85:0 reduce
  46:289 reduce
  17:288,target 85
  10:281,target 57
  4:0,target 58
  85:289 reduce
  85:0,target 74
  46:289,target 14
  77:0,target 62
  18:0 accept
  16:288 shift
  3:289,target 55
  70:0,target 35
  69:0,target 84
  16:289 reduce
  62:0,target 30
  16:291 shift
  54:0,target 22
  40:0 reduce
  39:0 reduce
  10:259,target 35
  10:260,target 36
  55:289 reduce
  46:0,target 14
  0:307,target 14
  38:0,target 6
  35:289,target 3
  81:289,target 42
  61:0 reduce
  31:0,target 72
  9:272,target 48
  23:0,target 56
  5:289 reduce
  15:0,target 67
  82:0 reduce
  25:289 reduce
  3:318,target 25
  24:289,target 57
  70:289,target 35
  69:289,target 84
  64:289 reduce
  10:278,target 54
  15:0 reduce
  36:0 reduce
  34:289 reduce
  13:289,target 49
  10:257,target 33
  58:289,target 26
  0:305,target 13
  0:295,target 4
  57:0 reduce
  73:289 reduce
  16:321 goto
  9:269,target 45
  9:270,target 46
  78:0 reduce
  47:289,target 15
  43:289 reduce
  4:289,target 58
  12:0 reduce
  10:276,target 52
  82:289 reduce
  33:0 reduce
  36:289,target 4
  13:289 reduce
  10:257 shift
  82:289,target 65
  10:258 shift
  54:0 reduce
  0:303,target 11
  0:293,target 2
  10:259 shift
  10:260 shift
  52:289 reduce
  10:261 shift
  8:0,target 47
  9:267,target 43
  10:262 shift
  89:0,target 34
  75:0 reduce
  1:0,target 50
  2:288 shift
  10:263 shift
  82:0,target 65
  25:289,target 38
  2:289 reduce
  10:264 shift
  74:0,target 77
  71:289,target 78
  2:291 shift
  10:265 shift
  66:0,target 81
  22:289 reduce
  7:0 reduce
  10:266 shift
  58:0,target 26
  10:267 shift
  51:0,target 19
  10:274,target 50
  10:268 shift
  61:289 reduce
  43:0,target 11
  10:270 shift
  10:269 shift
  35:0,target 3
  30:0 reduce
  29:0 reduce
  14:289,target 48
  10:271 shift
  60:289,target 28
  59:289,target 27
  27:0,target 60
  10:272 shift
  9:286,target 62
  20:0,target 53
  19:0,target 32
  10:273 shift
  51:0 reduce
  12:0,target 61
  10:274 shift
  31:289 reduce
  11:297,target 73
  10:275 shift
  0:301,target 9
  10:276 shift
  72:0 reduce
  10:277 shift
  9:265,target 41
  70:289 reduce
  69:289 reduce
  48:289,target 16
  10:278 shift
  10:280 shift
  10:279 shift
  5:289,target 46
  10:281 shift
  4:0 reduce
  10:282 shift
  2:317 goto
  10:283 shift
  40:289 reduce
  39:289 reduce
  10:284 shift
  10:272,target 48
  37:289,target 5
  26:0 reduce
  10:285 shift
  83:289,target 66
  10:286 shift
  78:289 reduce
  12:310,target 77
  10:287 shift
  9:284,target 60
  47:0 reduce
  0:288,target 1
  68:0 reduce
  26:289,target 59
  72:289,target 76
  48:289 reduce
  9:263,target 39
  89:0 reduce
  1:0 reduce
  87:289 reduce
  9:313,target 66
  15:289,target 67
  61:289,target 29
  23:0 reduce
  10:270,target 46
  10:269,target 45
  19:315,target 88
  57:289 reduce
  10:312 goto
  44:0 reduce
  5:0,target 46
  9:282,target 58
  10:313 goto
  86:0,target 75
  7:288 shift
  78:0,target 40
  7:289 reduce
  71:0,target 78
  65:0 reduce
  50:289,target 18
  49:289,target 17
  7:291 shift
  63:0,target 31
  27:289 reduce
  55:0,target 23
  9:261,target 37
  86:0 reduce
  47:0,target 15
  66:289 reduce
  40:0,target 8
  39:0,target 7
  32:0,target 43
  38:289,target 6
  24:0,target 57
  84:289,target 41
  20:0 reduce
  19:0 reduce
  16:0,target 64
  7:323,target 32
  10:267,target 43
  36:289 reduce
  41:0 reduce
  10:327 goto
  9:279,target 55
  9:280,target 56
  75:289 reduce
  27:289,target 60
  73:289,target 79
  62:0 reduce
  16:321,target 84
  83:0 reduce
  9:258,target 34
  45:289 reduce
  10:286,target 62
  16:289,target 64
  62:289,target 30
  84:289 reduce
  16:0 reduce
  7:323 goto
  15:288 shift
  15:289 reduce
  2:291,target 21
  10:265,target 41
  37:0 reduce
  15:291 shift
  54:289 reduce
  51:289,target 19
  9:277,target 53
  58:0 reduce
  7:289,target 70
  4:288 shift
  4:289 reduce
  80:0 reduce
  79:0 reduce
  4:291 shift
  24:289 reduce
  40:289,target 8
  39:289,target 7
  10:284,target 60
  85:289,target 74
  63:289 reduce
  13:0 reduce
  2:0,target 52
  9:306,target 64
  83:0,target 66
  75:0,target 45
  34:0 reduce
  2:288,target 20
  9:257 shift
  10:263,target 39
  67:0,target 36
  28:289,target 39
  0:311,target 17
  9:258 shift
  74:289,target 77
  60:0,target 28
  59:0,target 27
  33:289 reduce
  9:259 shift
  9:260 shift
  55:0 reduce
  52:0,target 20
  9:261 shift
  9:275,target 51
  44:0,target 12
  9:262 shift
  10:313,target 69
  72:289 reduce
  36:0,target 4
  9:263 shift
  76:0 reduce
  28:0,target 39
  15:322 goto
  9:264 shift
  21:0,target 54
  17:289,target 73
  9:265 shift
  63:289,target 31
  13:0,target 49
  9:266 shift
  10:282,target 58
  2:317,target 22
  8:0 reduce
  9:267 shift
  42:289 reduce
  4:319 goto
  9:268 shift
  3:291,target 24
  9:269 shift
  9:270 shift
  12:320,target 78
  9:271 shift
  81:289 reduce
  31:0 reduce
  9:272 shift
  52:289,target 20
  9:273 shift
  10:261,target 37
  12:290 shift
  12:289 reduce
  0:298,target 6
  0:308,target 15
  8:289,target 47
  9:274 shift
  52:0 reduce
  9:275 shift
  9:273,target 49
  9:276 shift
  51:289 reduce
  9:277 shift
  73:0 reduce
  9:278 shift
  41:289,target 9
  9:279 shift
  9:280 shift
  86:289,target 75
  1:289 reduce
  9:281 shift
  5:0 reduce
  9:282 shift
}

array set frame::rules {
  9,l 313
  11,l 313
  32,l 314
  53,l 317
  74,l 324
  6,l 313
  28,l 313
  50,l 316
  49,l 316
  71,l 323
  3,l 312
  25,l 313
  46,l 316
  67,l 322
  0,l 328
  22,l 313
  43,l 316
  64,l 321
  18,l 313
  40,l 316
  39,l 316
  61,l 320
  82,l 326
  15,l 313
  36,l 316
  57,l 318
  78,l 325
  12,l 313
  33,l 315
  54,l 317
  75,l 324
  7,l 313
  29,l 313
  30,l 313
  51,l 316
  72,l 323
  4,l 312
  26,l 313
  47,l 316
  68,l 322
  1,l 312
  23,l 313
  44,l 316
  65,l 321
  19,l 313
  20,l 313
  41,l 316
  62,l 320
  83,l 327
  16,l 313
  37,l 316
  58,l 319
  80,l 326
  79,l 325
  13,l 313
  34,l 314
  55,l 318
  76,l 325
  8,l 313
  10,l 313
  31,l 313
  52,l 317
  73,l 324
  5,l 313
  27,l 313
  48,l 316
  70,l 323
  69,l 322
  2,l 312
  24,l 313
  45,l 316
  66,l 321
  21,l 313
  42,l 316
  63,l 320
  84,l 327
  17,l 313
  38,l 316
  60,l 319
  59,l 319
  81,l 326
  14,l 313
  35,l 316
  56,l 318
  77,l 325
}

array set frame::rules {
  63,dc 1
  12,dc 1
  77,dc 1
  26,dc 1
  3,dc 1
  41,dc 2
  55,dc 0
  70,dc 0
  69,dc 1
  18,dc 1
  84,dc 1
  33,dc 0
  9,dc 1
  47,dc 1
  62,dc 1
  11,dc 1
  76,dc 1
  25,dc 1
  2,dc 1
  40,dc 2
  39,dc 2
  54,dc 1
  68,dc 1
  17,dc 1
  83,dc 1
  32,dc 1
  8,dc 1
  46,dc 1
  61,dc 0
  10,dc 1
  75,dc 1
  24,dc 1
  1,dc 1
  38,dc 2
  53,dc 1
  67,dc 0
  16,dc 1
  82,dc 1
  31,dc 1
  7,dc 1
  45,dc 2
  60,dc 1
  59,dc 1
  74,dc 1
  23,dc 1
  0,dc 1
  37,dc 2
  52,dc 0
  66,dc 1
  15,dc 1
  81,dc 1
  29,dc 1
  30,dc 1
  6,dc 1
  44,dc 2
  58,dc 0
  73,dc 0
  22,dc 1
  36,dc 2
  51,dc 2
  65,dc 1
  14,dc 1
  80,dc 1
  79,dc 1
  28,dc 1
  5,dc 1
  43,dc 2
  57,dc 1
  72,dc 1
  21,dc 1
  35,dc 2
  50,dc 1
  49,dc 1
  64,dc 0
  13,dc 1
  78,dc 1
  27,dc 1
  4,dc 1
  42,dc 2
  56,dc 1
  71,dc 1
  19,dc 1
  20,dc 1
  34,dc 3
  48,dc 1
}

array set frame::rules {
  41,line 149
  7,line 112
  37,line 145
  4,line 108
  34,line 140
  1,line 105
  31,line 136
  27,line 132
  83,line 213
  24,line 129
  80,line 208
  79,line 205
  21,line 126
  76,line 202
  17,line 122
  73,line 197
  14,line 119
  70,line 192
  69,line 189
  11,line 116
  66,line 184
  63,line 179
  60,line 174
  59,line 173
  56,line 168
  53,line 163
  50,line 158
  49,line 157
  46,line 154
  33,e 1
  43,line 151
  9,line 114
  40,line 148
  39,line 147
  6,line 111
  36,line 144
  3,line 107
  33,line 139
  29,line 134
  30,line 135
  26,line 131
  82,line 210
  23,line 128
  78,line 204
  19,line 124
  20,line 125
  75,line 199
  16,line 121
  72,line 194
  13,line 118
  68,line 188
  10,line 115
  65,line 183
  62,line 178
  58,line 172
  55,line 167
  52,line 162
  48,line 156
  45,line 153
  42,line 150
  8,line 113
  38,line 146
  5,line 110
  35,line 143
  2,line 106
  32,line 139
  28,line 133
  84,line 214
  25,line 130
  81,line 209
  22,line 127
  77,line 203
  18,line 123
  74,line 198
  15,line 120
  71,line 193
  12,line 117
  67,line 187
  64,line 182
  61,line 177
  57,line 169
  54,line 164
  51,line 159
  47,line 155
  44,line 152
}

array set frame::lr1_table {
  66,trans {}
  35 {{3 {0 289} 1}}
  85,trans {}
  14,trans {}
  36 {{4 {0 289} 1}}
  33,trans {}
  37 {{5 {0 289} 1}}
  52,trans {}
  38 {{6 {0 289} 1}}
  71,trans {}
  40 {{8 {0 289} 1}}
  39 {{7 {0 289} 1}}
  89,trans {}
  18,trans {}
  41 {{9 {0 289} 1}}
  1,trans {}
  37,trans {}
  42 {{10 {0 289} 1}}
  56,trans {}
  43 {{11 {0 289} 1}}
  75,trans {}
  44 {{12 {0 289} 1}}
  23,trans {}
  45 {{13 {0 289} 1}}
  5,trans {}
  42,trans {}
  46 {{14 {0 289} 1}}
  61,trans {}
  47 {{15 {0 289} 1}}
  80,trans {}
  79,trans {}
  48 {{16 {0 289} 1}}
  27,trans {}
  9,trans {{257 33} {258 34} {259 35} {260 36} {261 37} {262 38} {263 39} {264 40} {265 41} {266 42} {267 43} {268 44} {269 45} {270 46} {271 47} {272 48} {273 49} {274 50} {275 51} {276 52} {277 53} {278 54} {279 55} {280 56} {281 57} {282 58} {283 59} {284 60} {285 61} {286 62} {287 63} {306 64} {312 65} {313 66} {326 67}}
  50 {{18 {0 289} 1}}
  49 {{17 {0 289} 1}}
  46,trans {}
  51 {{19 {0 289} 1}}
  65,trans {}
  52 {{20 {0 289} 1}}
  84,trans {}
  13,trans {}
  53 {{21 {0 289} 1}}
  32,trans {}
  54 {{22 {0 289} 1}}
  51,trans {}
  55 {{23 {0 289} 1}}
  70,trans {}
  69,trans {}
  56 {{24 {0 289} 1}}
  88,trans {{289 89}}
  17,trans {{288 85} {291 86} {324 87}}
  57 {{25 {0 289} 1}}
  0,trans {{288 1} {293 2} {294 3} {295 4} {296 5} {298 6} {299 7} {300 8} {301 9} {302 10} {303 11} {304 12} {305 13} {307 14} {308 15} {309 16} {311 17} {314 18} {316 19}}
  36,trans {}
  58 {{26 {0 289} 1}}
  55,trans {}
  60 {{28 {0 289} 1}}
  59 {{27 {0 289} 1}}
  74,trans {}
  61 {{29 {0 289} 1}}
  22,trans {}
  62 {{30 {0 289} 1}}
  4,trans {{288 26} {291 27} {319 28}}
  41,trans {}
  63 {{31 {0 289} 1}}
  60,trans {}
  59,trans {}
  64 {{82 {0 289} 1}}
  78,trans {}
  65 {{80 {0 289} 1}}
  26,trans {}
  66 {{81 {0 289} 1}}
  8,trans {}
  45,trans {}
  67 {{36 {0 289} 2}}
  64,trans {}
  68 {{83 {0 289} 1}}
  83,trans {}
  12,trans {{290 76} {310 77} {320 78}}
  70 {{35 {0 289} 2}}
  69 {{84 {0 289} 1}}
  31,trans {}
  71 {{78 {0 289} 1}}
  50,trans {}
  49,trans {}
  72 {{76 {0 289} 1}}
  68,trans {}
  73 {{79 {0 289} 1}}
  87,trans {}
  16,trans {{288 82} {291 83} {321 84}}
  74 {{77 {0 289} 1}}
  35,trans {}
  75 {{45 {0 289} 2}}
  54,trans {}
  76 {{63 {0 289} 1}}
  73,trans {}
  77 {{62 {0 289} 1}}
  21,trans {}
  78 {{40 {0 289} 2}}
  3,trans {{288 23} {291 24} {318 25}}
  40,trans {}
  39,trans {}
  80 {{69 {0 289} 1}}
  79 {{68 {0 289} 1}}
  58,trans {}
  81 {{42 {0 289} 2}}
  10 {{35 {0 289} 1} {83 {0 289} 0} {84 {0 289} 0} {1 {0 289} 0} {2 {0 289} 0} {3 {0 289} 0} {4 {0 289} 0} {5 {0 289} 0} {6 {0 289} 0} {7 {0 289} 0} {8 {0 289} 0} {9 {0 289} 0} {10 {0 289} 0} {11 {0 289} 0} {12 {0 289} 0} {13 {0 289} 0} {14 {0 289} 0} {15 {0 289} 0} {16 {0 289} 0} {17 {0 289} 0} {18 {0 289} 0} {19 {0 289} 0} {20 {0 289} 0} {21 {0 289} 0} {22 {0 289} 0} {23 {0 289} 0} {24 {0 289} 0} {25 {0 289} 0} {26 {0 289} 0} {27 {0 289} 0} {28 {0 289} 0} {29 {0 289} 0} {30 {0 289} 0} {31 {0 289} 0}}
  77,trans {}
  82 {{65 {0 289} 1}}
  11 {{45 {0 289} 1} {76 {0 289} 0} {77 {0 289} 0} {78 {0 289} 0} {79 {0 289} 0}}
  25,trans {}
  83 {{66 {0 289} 1}}
  12 {{40 {0 289} 1} {61 {0 289} 0} {62 {0 289} 0} {63 {0 289} 0}}
  7,trans {{288 30} {291 31} {323 32}}
  44,trans {}
  84 {{41 {0 289} 2}}
  13 {{49 {0 289} 1}}
  63,trans {}
  85 {{74 {0 289} 1}}
  14 {{48 {0 289} 1}}
  82,trans {}
  86 {{75 {0 289} 1}}
  11,trans {{292 71} {296 72} {297 73} {300 74} {325 75}}
  15 {{42 {0 289} 1} {67 {0 289} 0} {68 {0 289} 0} {69 {0 289} 0}}
  30,trans {}
  29,trans {}
  87 {{44 {0 289} 2}}
  16 {{41 {0 289} 1} {64 {0 289} 0} {65 {0 289} 0} {66 {0 289} 0}}
  48,trans {}
  88 {{34 0 2}}
  0 {{0 0 0} {32 0 0} {34 0 0} {35 {0 289} 0} {36 {0 289} 0} {37 {0 289} 0} {38 {0 289} 0} {39 {0 289} 0} {40 {0 289} 0} {41 {0 289} 0} {42 {0 289} 0} {43 {0 289} 0} {44 {0 289} 0} {45 {0 289} 0} {46 {0 289} 0} {47 {0 289} 0} {48 {0 289} 0} {49 {0 289} 0} {50 {0 289} 0} {51 {0 289} 0}}
  17 {{44 {0 289} 1} {73 {0 289} 0} {74 {0 289} 0} {75 {0 289} 0}}
  89 {{34 0 3}}
  67,trans {}
  1 {{50 {0 289} 1}}
  18 {{0 0 1}}
  86,trans {}
  15,trans {{288 79} {291 80} {322 81}}
  2 {{37 {0 289} 1} {52 {0 289} 0} {53 {0 289} 0} {54 {0 289} 0}}
  19 {{32 0 1} {34 0 1} {33 289 0}}
  20 {{53 {0 289} 1}}
  34,trans {}
  3 {{38 {0 289} 1} {55 {0 289} 0} {56 {0 289} 0} {57 {0 289} 0}}
  21 {{54 {0 289} 1}}
  53,trans {}
  4 {{39 {0 289} 1} {58 {0 289} 0} {59 {0 289} 0} {60 {0 289} 0}}
  22 {{37 {0 289} 2}}
  72,trans {}
  5 {{46 {0 289} 1}}
  23 {{56 {0 289} 1}}
  20,trans {}
  19,trans {{315 88}}
  6 {{51 {0 289} 1}}
  2,trans {{288 20} {291 21} {317 22}}
  24 {{57 {0 289} 1}}
  38,trans {}
  7 {{43 {0 289} 1} {70 {0 289} 0} {71 {0 289} 0} {72 {0 289} 0}}
  25 {{38 {0 289} 2}}
  57,trans {}
  8 {{47 {0 289} 1}}
  26 {{59 {0 289} 1}}
  76,trans {}
  9 {{36 {0 289} 1} {80 {0 289} 0} {81 {0 289} 0} {82 {0 289} 0} {1 {0 289} 0} {2 {0 289} 0} {3 {0 289} 0} {4 {0 289} 0} {5 {0 289} 0} {6 {0 289} 0} {7 {0 289} 0} {8 {0 289} 0} {9 {0 289} 0} {10 {0 289} 0} {11 {0 289} 0} {12 {0 289} 0} {13 {0 289} 0} {14 {0 289} 0} {15 {0 289} 0} {16 {0 289} 0} {17 {0 289} 0} {18 {0 289} 0} {19 {0 289} 0} {20 {0 289} 0} {21 {0 289} 0} {22 {0 289} 0} {23 {0 289} 0} {24 {0 289} 0} {25 {0 289} 0} {26 {0 289} 0} {27 {0 289} 0} {28 {0 289} 0} {29 {0 289} 0} {30 {0 289} 0} {31 {0 289} 0}}
  27 {{60 {0 289} 1}}
  24,trans {}
  28 {{39 {0 289} 2}}
  6,trans {{288 29}}
  43,trans {}
  29 {{51 {0 289} 2}}
  30 {{71 {0 289} 1}}
  62,trans {}
  31 {{72 {0 289} 1}}
  81,trans {}
  10,trans {{257 33} {258 34} {259 35} {260 36} {261 37} {262 38} {263 39} {264 40} {265 41} {266 42} {267 43} {268 44} {269 45} {270 46} {271 47} {272 48} {273 49} {274 50} {275 51} {276 52} {277 53} {278 54} {279 55} {280 56} {281 57} {282 58} {283 59} {284 60} {285 61} {286 62} {287 63} {312 68} {313 69} {327 70}}
  32 {{43 {0 289} 2}}
  28,trans {}
  33 {{1 {0 289} 1}}
  47,trans {}
  34 {{2 {0 289} 1}}
}

array set frame::token_id_table {
  286 WCSY_
  286,t 0
  287 WCSZ_
  292,line 48
  302,line 58
  288 INT_
  317,t 1
  265,title WCSD
  289 STRING_
  290 3D_
  300 LAST_
  284,title WCSW
  291 ALL_
  301 LOCK_
  313,title {}
  292 BACK_
  302 MATCH_
  288,line 40
  293 CENTER_
  303 MOVE_
  294 CLEAR_
  304 NEW_
  305 NEXT_
  295 DELETE_
  306 NONE_
  296 FIRST_
  307 PREV_
  262,t 0
  297 FORWARD_
  308 REFRESH_
  285,line 36
  298 FRAMENO_
  310 RGB_
  309 RESET_
  299 HIDE_
  311 SHOW_
  283,t 0
  312 coordsys
  313 wcssys
  314,t 1
  314 command
  282,line 33
  315 @PSEUDO1
  316 frame
  264,title WCSC
  317 center
  283,title WCSV
  318 clear
  312,title {}
  320 new
  319 delete
  278,line 29
  321 reset
  error,line 103
  322 refresh
  258,t 0
  323 hide
  324 show
  325 move
  275,line 26
  279,t 0
  280,t 0
  326 lock
  327 match
  328 start'
  311,t 0
  272,line 23
  263,title WCSB
  282,title WCSU
  311,title SHOW
  268,line 19
  276,t 0
  265,line 16
  307,t 0
  297,t 0
  328,t 1
  262,line 13
  327,line 212
  0,t 0
  0 {$}
  262,title WCSA
  281,title WCST
  error,t 0
  310,title RGB
  309,title RESET
  299,title HIDE
  328,title {}
  258,line 8
  273,t 0
  324,line 196
  294,t 0
  304,t 0
  325,t 1
  321,line 181
  317,line 161
  261,title WCS
  279,title WCSR
  280,title WCSS
  308,title REFRESH
  269,t 0
  270,t 0
  298,title FRAMENO
  327,title {}
  314,line 138
  291,t 0
  301,t 0
  322,t 1
  311,line 67
  307,line 63
  266,t 0
  260,title DETECTOR
  259,title AMPLIFIER
  297,line 53
  278,title WCSQ
  307,title PREV
  297,title FORWARD
  326,title {}
  287,t 0
  294,line 50
  304,line 60
  318,t 1
  error,title {}
  291,line 47
  301,line 57
  263,t 0
  258,title PHYSICAL
  287,line 38
  277,title WCSP
  284,t 0
  306,title NONE
  296,title FIRST
  325,title {}
  315,t 1
  284,line 35
  281,line 32
  260,t 0
  259,t 0
  281,t 0
  257,title IMAGE
  277,line 28
  276,title WCSO
  312,t 1
  305,title NEXT
  295,title DELETE
  324,title {}
  274,line 25
  271,line 22
  277,t 0
  308,t 0
  267,line 18
  298,t 0
  275,title WCSN
  294,title CLEAR
  304,title NEW
  323,title {}
  264,line 15
  261,line 12
  274,t 0
  326,line 207
  305,t 0
  295,t 0
  257,line 7
  326,t 1
  274,title WCSM
  323,line 191
  293,title CENTER
  303,title MOVE
  322,title {}
  320,line 176
  319,line 171
  error error
  271,t 0
  292,t 0
  302,t 0
  316,line 142
  323,t 1
  273,title WCSL
  313,line 109
  292,title BACK
  302,title MATCH
  321,title {}
  267,t 0
  310,line 66
  309,line 65
  299,line 55
  288,t 0
  320,t 1
  319,t 1
  306,line 62
  296,line 52
  272,title WCSK
  291,title ALL
  293,line 49
  301,title LOCK
  303,line 59
  320,title {}
  319,title {}
  264,t 0
  285,t 0
  289,line 42
  290,line 46
  300,line 56
  316,t 1
  286,line 37
  271,title WCSJ
  261,t 0
  283,line 34
  289,title string
  290,title 3D
  300,title LAST
  318,title {}
  282,t 0
  279,line 30
  280,line 31
  313,t 1
  276,line 27
  257,t 0
  269,title WCSH
  270,title WCSI
  273,line 24
  288,title integer
  317,title {}
  278,t 0
  310,t 0
  309,t 0
  299,t 0
  269,line 20
  270,line 21
  266,line 17
  268,title WCSG
  275,t 0
  263,line 14
  287,title WCSZ
  316,title {}
  328,line 215
  306,t 0
  296,t 0
  327,t 1
  260,line 10
  259,line 9
  325,line 201
  322,line 186
  272,t 0
  267,title WCSF
  257 IMAGE_
  286,title WCSY
  293,t 0
  303,t 0
  315,title {}
  258 PHYSICAL_
  318,line 166
  260 DETECTOR_
  259 AMPLIFIER_
  324,t 1
  261 WCS_
  262 WCSA_
  263 WCSB_
  264 WCSC_
  315,line 139
  265 WCSD_
  266 WCSE_
  267 WCSF_
  268,t 0
  268 WCSG_
  269 WCSH_
  270 WCSI_
  312,line 104
  271 WCSJ_
  272 WCSK_
  289,t 0
  290,t 0
  300,t 0
  266,title WCSE
  273 WCSL_
  274 WCSM_
  285,title WCSX
  321,t 1
  314,title {}
  275 WCSN_
  308,line 64
  276 WCSO_
  298,line 54
  277 WCSP_
  278 WCSQ_
  279 WCSR_
  280 WCSS_
  281 WCST_
  305,line 61
  282 WCSU_
  295,line 51
  265,t 0
  283 WCSV_
  284 WCSW_
  285 WCSX_
}

proc frame::yyparse {} {
    variable yylval
    variable table
    variable rules
    variable token
    variable yycnt
    variable lr1_table
    variable token_id_table
    variable yyerr
    variable save_state

    set yycnt 0
    set state_stack {0}
    set value_stack {{}}
    set token ""
    set accepted 0
    set yyerr 0
    set save_state 0

    while {$accepted == 0} {
        set state [lindex $state_stack end]
        if {$token == ""} {
            set yylval ""
            set token [yylex]
            set buflval $yylval
	    if {$token>0} {
	        incr yycnt
            }
        }
        if {![info exists table($state:$token)] || $yyerr} {
	    if {!$yyerr} {
	        set save_state $state
	    }
            # pop off states until error token accepted
            while {[llength $state_stack] > 0 && \
                       ![info exists table($state:error)]} {
                set state_stack [lrange $state_stack 0 end-1]
                set value_stack [lrange $value_stack 0 \
                                       [expr {[llength $state_stack] - 1}]]
                set state [lindex $state_stack end]
            }
            if {[llength $state_stack] == 0} {
 
	        set rr { }
                if {[info exists lr1_table($save_state,trans)] && [llength $lr1_table($save_state,trans)] >= 1} {
                    foreach trans $lr1_table($save_state,trans) {
                        foreach {tok_id nextstate} $trans {
			    set ss $token_id_table($tok_id,title)
			    if {$ss != {}} {
			        append rr "$ss, "
                            }
                        }
                    }
                }
		set rr [string trimleft $rr { }]
		set rr [string trimright $rr {, }]
                yyerror "parse error, expecting: $rr"


                return 1
            }
            lappend state_stack [set state $table($state:error,target)]
            lappend value_stack {}
            # consume tokens until it finds an acceptable one
            while {![info exists table($state:$token)]} {
                if {$token == 0} {
                    yyerror "end of file while recovering from error"
                    return 1
                }
                set yylval {}
                set token [yylex]
                set buflval $yylval
            }
            continue
        }
        switch -- $table($state:$token) {
            shift {
                lappend state_stack $table($state:$token,target)
                lappend value_stack $buflval
                set token ""
            }
            reduce {
                set rule $table($state:$token,target)
                set ll $rules($rule,l)
                if {[info exists rules($rule,e)]} {
                    set dc $rules($rule,e)
                } else {
                    set dc $rules($rule,dc)
                }
                set stackpointer [expr {[llength $state_stack]-$dc}]
                setupvalues $value_stack $stackpointer $dc
                set _ $1
                set yylval [lindex $value_stack end]
                switch -- $rule {
                    1 { set _ image }
                    2 { set _ physical }
                    3 { set _ amplifier }
                    4 { set _ detector }
                    5 { set _ wcs }
                    6 { set _ wcsa }
                    7 { set _ wcsb }
                    8 { set _ wcsc }
                    9 { set _ wcsd }
                    10 { set _ wcse }
                    11 { set _ wcsf }
                    12 { set _ wcsg }
                    13 { set _ wcsh }
                    14 { set _ wcsi }
                    15 { set _ wcsj }
                    16 { set _ wcsk }
                    17 { set _ wcsl }
                    18 { set _ wcsm }
                    19 { set _ wcsn }
                    20 { set _ wcso }
                    21 { set _ wcsp }
                    22 { set _ wcsq }
                    23 { set _ wcsr }
                    24 { set _ wcss }
                    25 { set _ wcst }
                    26 { set _ wcsu }
                    27 { set _ wcsv }
                    28 { set _ wcsw }
                    29 { set _ wcsx }
                    30 { set _ wcsy }
                    31 { set _ wcsz }
                    33 { global ds9; if {!$ds9(init)} {YYERROR} else {yyclearin; YYACCEPT} }
                    35 { MatchFrameCurrent $2 }
                    36 { ProcessCmdSet panzoom lock $2; LockFrameCurrent }
                    46 { FirstFrame }
                    47 { LastFrame }
                    48 { PrevFrame }
                    49 { NextFrame }
                    50 { CreateGotoFrame $1 base }
                    51 { CreateGotoFrame $2 base }
                    52 { CenterCurrentFrame }
                    53 { CenterFrame "Frame$1" }
                    54 { CenterAllFrame }
                    55 { ClearCurrentFrame }
                    56 { ClearFrame "Frame$1" }
                    57 { ClearAllFrame }
                    58 { DeleteCurrentFrame }
                    59 { DeleteSingleFrame "Frame$1" }
                    60 { DeleteAllFrames }
                    61 { CreateFrame }
                    62 { CreateRGBFrame }
                    63 { Create3DFrame }
                    64 { ResetCurrentFrame }
                    65 { ResetFrame "Frame$1" }
                    66 { ResetAllFrame }
                    67 { UpdateCurrentFrame }
                    68 { UpdateFrame "Frame$1" }
                    69 { UpdateAllFrame }
                    70 { global current; ProcessCmdSet active $current(frame) 0 UpdateActiveFrames }
                    71 { ProcessCmdSet active "Frame$1" 0 UpdateActiveFrames }
                    72 { ActiveFrameNone }
                    74 { ProcessCmdSet active "Frame$1" 1 UpdateActiveFrames }
                    75 { ActiveFrameAll }
                    76 { FirstFrame }
                    77 { LastFrame }
                    78 { PrevFrame }
                    79 { NextFrame }
                    80 { set _ $1 }
                    81 { set _ $1 }
                    82 { set _ none }
                    83 { set _ $1 }
                    84 { set _ $1 }
                }
                unsetupvalues $dc
                # pop off tokens from the stack if normal rule
                if {![info exists rules($rule,e)]} {
                    incr stackpointer -1
                    set state_stack [lrange $state_stack 0 $stackpointer]
                    set value_stack [lrange $value_stack 0 $stackpointer]
                }
                # now do the goto transition
                lappend state_stack $table([lindex $state_stack end]:$ll,target)
                lappend value_stack $_
            }
            accept {
                set accepted 1
            }
            goto -
            default {
                puts stderr "Internal parser error: illegal command $table($state:$token)"
                return 2
            }
        }
    }
    return 0
}

######
# end autogenerated taccle functions
######

proc frame::yyerror {msg} {
     variable yycnt
     variable yy_current_buffer
     variable index_

     ParserError $msg $yycnt $yy_current_buffer $index_
}
